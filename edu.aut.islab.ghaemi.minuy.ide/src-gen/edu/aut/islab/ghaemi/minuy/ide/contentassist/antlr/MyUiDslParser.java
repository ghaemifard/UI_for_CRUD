/*
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.ide.contentassist.antlr;

import com.google.inject.Inject;
import edu.aut.islab.ghaemi.minuy.ide.contentassist.antlr.internal.InternalMyUiDslParser;
import edu.aut.islab.ghaemi.minuy.services.MyUiDslGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class MyUiDslParser extends AbstractContentAssistParser {

	@Inject
	private MyUiDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyUiDslParser createParser() {
		InternalMyUiDslParser result = new InternalMyUiDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getHeadTypeAccess().getAlternatives(), "rule__HeadType__Alternatives");
					put(grammarAccess.getCssStyleAccess().getAlternatives_0(), "rule__CssStyle__Alternatives_0");
					put(grammarAccess.getColorDefAccess().getAlternatives(), "rule__ColorDef__Alternatives");
					put(grammarAccess.getLiteralColorAccess().getValueAlternatives_0(), "rule__LiteralColor__ValueAlternatives_0");
					put(grammarAccess.getMeasureTypeAccess().getAlternatives(), "rule__MeasureType__Alternatives");
					put(grammarAccess.getPosValsAccess().getAlternatives(), "rule__PosVals__Alternatives");
					put(grammarAccess.getFltValsAccess().getAlternatives(), "rule__FltVals__Alternatives");
					put(grammarAccess.getClrValsAccess().getAlternatives(), "rule__ClrVals__Alternatives");
					put(grammarAccess.getDispValsAccess().getAlternatives(), "rule__DispVals__Alternatives");
					put(grammarAccess.getVeralValsAccess().getAlternatives(), "rule__VeralVals__Alternatives");
					put(grammarAccess.getOFlowValsAccess().getAlternatives(), "rule__OFlowVals__Alternatives");
					put(grammarAccess.getInnerTypeArrayAccess().getAlternatives(), "rule__InnerTypeArray__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getHeadAccess().getGroup(), "rule__Head__Group__0");
					put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
					put(grammarAccess.getSelfRepeatAccess().getGroup(), "rule__SelfRepeat__Group__0");
					put(grammarAccess.getAccessoryAccess().getGroup(), "rule__Accessory__Group__0");
					put(grammarAccess.getInnerFeatureAccess().getGroup(), "rule__InnerFeature__Group__0");
					put(grammarAccess.getInnerTextAccess().getGroup(), "rule__InnerText__Group__0");
					put(grammarAccess.getInnerStyleAccess().getGroup(), "rule__InnerStyle__Group__0");
					put(grammarAccess.getInnerClassAccess().getGroup(), "rule__InnerClass__Group__0");
					put(grammarAccess.getClassNameAccess().getGroup(), "rule__ClassName__Group__0");
					put(grammarAccess.getClassNameSecAccess().getGroup(), "rule__ClassNameSec__Group__0");
					put(grammarAccess.getInnerTypeAccess().getGroup(), "rule__InnerType__Group__0");
					put(grammarAccess.getCssStyleAccess().getGroup(), "rule__CssStyle__Group__0");
					put(grammarAccess.getBorderAccess().getGroup(), "rule__Border__Group__0");
					put(grammarAccess.getColorAccess().getGroup(), "rule__Color__Group__0");
					put(grammarAccess.getBackColorAccess().getGroup(), "rule__BackColor__Group__0");
					put(grammarAccess.getRgbaColorAccess().getGroup(), "rule__RgbaColor__Group__0");
					put(grammarAccess.getRvalAccess().getGroup(), "rule__Rval__Group__0");
					put(grammarAccess.getGvalAccess().getGroup(), "rule__Gval__Group__0");
					put(grammarAccess.getBvalAccess().getGroup(), "rule__Bval__Group__0");
					put(grammarAccess.getAvalAccess().getGroup(), "rule__Aval__Group__0");
					put(grammarAccess.getBorderRadAccess().getGroup(), "rule__BorderRad__Group__0");
					put(grammarAccess.getPosAccess().getGroup(), "rule__Pos__Group__0");
					put(grammarAccess.getFltAccess().getGroup(), "rule__Flt__Group__0");
					put(grammarAccess.getClrAccess().getGroup(), "rule__Clr__Group__0");
					put(grammarAccess.getDispAccess().getGroup(), "rule__Disp__Group__0");
					put(grammarAccess.getVerAlAccess().getGroup(), "rule__VerAl__Group__0");
					put(grammarAccess.getOFlowAccess().getGroup(), "rule__OFlow__Group__0");
					put(grammarAccess.getWidAccess().getGroup(), "rule__Wid__Group__0");
					put(grammarAccess.getH8Access().getGroup(), "rule__H8__Group__0");
					put(grammarAccess.getCoordAccess().getGroup(), "rule__Coord__Group__0");
					put(grammarAccess.getMargAccess().getGroup(), "rule__Marg__Group__0");
					put(grammarAccess.getPaddAccess().getGroup(), "rule__Padd__Group__0");
					put(grammarAccess.getMinMaxValueAccess().getGroup(), "rule__MinMaxValue__Group__0");
					put(grammarAccess.getMinValAccess().getGroup(), "rule__MinVal__Group__0");
					put(grammarAccess.getMaxValAccess().getGroup(), "rule__MaxVal__Group__0");
					put(grammarAccess.getMidValAccess().getGroup(), "rule__MidVal__Group__0");
					put(grammarAccess.getFourAspectAccess().getGroup(), "rule__FourAspect__Group__0");
					put(grammarAccess.getLeftAspectAccess().getGroup(), "rule__LeftAspect__Group__0");
					put(grammarAccess.getRightAspectAccess().getGroup(), "rule__RightAspect__Group__0");
					put(grammarAccess.getUpAspectAccess().getGroup(), "rule__UpAspect__Group__0");
					put(grammarAccess.getDownAspectAccess().getGroup(), "rule__DownAspect__Group__0");
					put(grammarAccess.getModelAccess().getHeadsAssignment_0(), "rule__Model__HeadsAssignment_0");
					put(grammarAccess.getModelAccess().getBodisAssignment_2(), "rule__Model__BodisAssignment_2");
					put(grammarAccess.getModelAccess().getAccessoriesAssignment_4(), "rule__Model__AccessoriesAssignment_4");
					put(grammarAccess.getHeadAccess().getFileNameAssignment_1(), "rule__Head__FileNameAssignment_1");
					put(grammarAccess.getHeadAccess().getHeadTypeAssignment_3(), "rule__Head__HeadTypeAssignment_3");
					put(grammarAccess.getBodyAccess().getNameAssignment_0(), "rule__Body__NameAssignment_0");
					put(grammarAccess.getBodyAccess().getRightAssignment_2(), "rule__Body__RightAssignment_2");
					put(grammarAccess.getBodyAccess().getSelfRepeatAssignment_3(), "rule__Body__SelfRepeatAssignment_3");
					put(grammarAccess.getNodeAccess().getNameAssignment(), "rule__Node__NameAssignment");
					put(grammarAccess.getSelfRepeatAccess().getNumberAssignment_0(), "rule__SelfRepeat__NumberAssignment_0");
					put(grammarAccess.getSelfRepeatAccess().getVerticalAssignment_1(), "rule__SelfRepeat__VerticalAssignment_1");
					put(grammarAccess.getAccessoryAccess().getLeftAssignment_0(), "rule__Accessory__LeftAssignment_0");
					put(grammarAccess.getAccessoryAccess().getTextAssignment_2_0(), "rule__Accessory__TextAssignment_2_0");
					put(grammarAccess.getAccessoryAccess().getStyleAssignment_2_1(), "rule__Accessory__StyleAssignment_2_1");
					put(grammarAccess.getAccessoryAccess().getClazzAssignment_2_2(), "rule__Accessory__ClazzAssignment_2_2");
					put(grammarAccess.getAccessoryAccess().getTypeAssignment_2_3(), "rule__Accessory__TypeAssignment_2_3");
					put(grammarAccess.getAccessoryAccess().getFeatureAssignment_2_4(), "rule__Accessory__FeatureAssignment_2_4");
					put(grammarAccess.getInnerFeatureAccess().getValueAssignment_1(), "rule__InnerFeature__ValueAssignment_1");
					put(grammarAccess.getInnerTextAccess().getValueAssignment_1(), "rule__InnerText__ValueAssignment_1");
					put(grammarAccess.getInnerStyleAccess().getStylesAssignment_2(), "rule__InnerStyle__StylesAssignment_2");
					put(grammarAccess.getInnerClassAccess().getClazzesAssignment_1(), "rule__InnerClass__ClazzesAssignment_1");
					put(grammarAccess.getClassNameAccess().getTheIdAssignment_0(), "rule__ClassName__TheIdAssignment_0");
					put(grammarAccess.getClassNameAccess().getClazzAssignment_1(), "rule__ClassName__ClazzAssignment_1");
					put(grammarAccess.getClassNameSecAccess().getCfClazzAssignment_1(), "rule__ClassNameSec__CfClazzAssignment_1");
					put(grammarAccess.getInnerTypeAccess().getValueAssignment_1(), "rule__InnerType__ValueAssignment_1");
					put(grammarAccess.getCssStylesAccess().getStylesAssignment(), "rule__CssStyles__StylesAssignment");
					put(grammarAccess.getBorderAccess().getValueAssignment_1(), "rule__Border__ValueAssignment_1");
					put(grammarAccess.getColorAccess().getValueAssignment_1(), "rule__Color__ValueAssignment_1");
					put(grammarAccess.getBackColorAccess().getValueAssignment_1(), "rule__BackColor__ValueAssignment_1");
					put(grammarAccess.getLiteralColorAccess().getValueAssignment(), "rule__LiteralColor__ValueAssignment");
					put(grammarAccess.getRgbaColorAccess().getRvalAssignment_1_0(), "rule__RgbaColor__RvalAssignment_1_0");
					put(grammarAccess.getRgbaColorAccess().getGvalAssignment_1_1(), "rule__RgbaColor__GvalAssignment_1_1");
					put(grammarAccess.getRgbaColorAccess().getBvalAssignment_1_2(), "rule__RgbaColor__BvalAssignment_1_2");
					put(grammarAccess.getRgbaColorAccess().getAvalAssignment_1_3(), "rule__RgbaColor__AvalAssignment_1_3");
					put(grammarAccess.getRvalAccess().getValueAssignment_0(), "rule__Rval__ValueAssignment_0");
					put(grammarAccess.getGvalAccess().getValueAssignment_0(), "rule__Gval__ValueAssignment_0");
					put(grammarAccess.getBvalAccess().getValueAssignment_0(), "rule__Bval__ValueAssignment_0");
					put(grammarAccess.getAvalAccess().getValueAssignment_0(), "rule__Aval__ValueAssignment_0");
					put(grammarAccess.getBorderRadAccess().getValueAssignment_1(), "rule__BorderRad__ValueAssignment_1");
					put(grammarAccess.getBorderRadAccess().getMeasureTypeAssignment_2(), "rule__BorderRad__MeasureTypeAssignment_2");
					put(grammarAccess.getPosAccess().getValueAssignment_1(), "rule__Pos__ValueAssignment_1");
					put(grammarAccess.getFltAccess().getValueAssignment_1(), "rule__Flt__ValueAssignment_1");
					put(grammarAccess.getClrAccess().getValueAssignment_1(), "rule__Clr__ValueAssignment_1");
					put(grammarAccess.getDispAccess().getValueAssignment_1(), "rule__Disp__ValueAssignment_1");
					put(grammarAccess.getVerAlAccess().getValueAssignment_1(), "rule__VerAl__ValueAssignment_1");
					put(grammarAccess.getOFlowAccess().getValueAssignment_1(), "rule__OFlow__ValueAssignment_1");
					put(grammarAccess.getWidAccess().getValueAssignment_1(), "rule__Wid__ValueAssignment_1");
					put(grammarAccess.getH8Access().getValueAssignment_1(), "rule__H8__ValueAssignment_1");
					put(grammarAccess.getCoordAccess().getValueAssignment_1(), "rule__Coord__ValueAssignment_1");
					put(grammarAccess.getMargAccess().getValueAssignment_1(), "rule__Marg__ValueAssignment_1");
					put(grammarAccess.getPaddAccess().getValueAssignment_1(), "rule__Padd__ValueAssignment_1");
					put(grammarAccess.getMinMaxValueAccess().getMinValAssignment_1_0(), "rule__MinMaxValue__MinValAssignment_1_0");
					put(grammarAccess.getMinMaxValueAccess().getMaxValAssignment_1_1(), "rule__MinMaxValue__MaxValAssignment_1_1");
					put(grammarAccess.getMinMaxValueAccess().getMidValAssignment_1_2(), "rule__MinMaxValue__MidValAssignment_1_2");
					put(grammarAccess.getMinValAccess().getValueAssignment_0(), "rule__MinVal__ValueAssignment_0");
					put(grammarAccess.getMinValAccess().getMeasureTypeAssignment_2(), "rule__MinVal__MeasureTypeAssignment_2");
					put(grammarAccess.getMaxValAccess().getValueAssignment_0(), "rule__MaxVal__ValueAssignment_0");
					put(grammarAccess.getMaxValAccess().getMeasureTypeAssignment_2(), "rule__MaxVal__MeasureTypeAssignment_2");
					put(grammarAccess.getMidValAccess().getValueAssignment_0(), "rule__MidVal__ValueAssignment_0");
					put(grammarAccess.getMidValAccess().getMeasureTypeAssignment_1(), "rule__MidVal__MeasureTypeAssignment_1");
					put(grammarAccess.getFourAspectAccess().getLeftAssignment_1_0(), "rule__FourAspect__LeftAssignment_1_0");
					put(grammarAccess.getFourAspectAccess().getRightAssignment_1_1(), "rule__FourAspect__RightAssignment_1_1");
					put(grammarAccess.getFourAspectAccess().getUpAssignment_1_2(), "rule__FourAspect__UpAssignment_1_2");
					put(grammarAccess.getFourAspectAccess().getDownAssignment_1_3(), "rule__FourAspect__DownAssignment_1_3");
					put(grammarAccess.getLeftAspectAccess().getValueAssignment_0(), "rule__LeftAspect__ValueAssignment_0");
					put(grammarAccess.getLeftAspectAccess().getMeasureTypeAssignment_2(), "rule__LeftAspect__MeasureTypeAssignment_2");
					put(grammarAccess.getRightAspectAccess().getValueAssignment_0(), "rule__RightAspect__ValueAssignment_0");
					put(grammarAccess.getRightAspectAccess().getMeasureTypeAssignment_2(), "rule__RightAspect__MeasureTypeAssignment_2");
					put(grammarAccess.getUpAspectAccess().getValueAssignment_0(), "rule__UpAspect__ValueAssignment_0");
					put(grammarAccess.getUpAspectAccess().getMeasureTypeAssignment_2(), "rule__UpAspect__MeasureTypeAssignment_2");
					put(grammarAccess.getDownAspectAccess().getValueAssignment_0(), "rule__DownAspect__ValueAssignment_0");
					put(grammarAccess.getDownAspectAccess().getMeasureTypeAssignment_2(), "rule__DownAspect__MeasureTypeAssignment_2");
					put(grammarAccess.getAccessoryAccess().getUnorderedGroup_2(), "rule__Accessory__UnorderedGroup_2");
					put(grammarAccess.getRgbaColorAccess().getUnorderedGroup_1(), "rule__RgbaColor__UnorderedGroup_1");
					put(grammarAccess.getMinMaxValueAccess().getUnorderedGroup_1(), "rule__MinMaxValue__UnorderedGroup_1");
					put(grammarAccess.getFourAspectAccess().getUnorderedGroup_1(), "rule__FourAspect__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalMyUiDslParser typedParser = (InternalMyUiDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyUiDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyUiDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
