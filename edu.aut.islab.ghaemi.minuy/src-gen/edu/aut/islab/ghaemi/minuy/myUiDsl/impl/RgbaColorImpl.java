/**
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.myUiDsl.impl;

import edu.aut.islab.ghaemi.minuy.myUiDsl.Aval;
import edu.aut.islab.ghaemi.minuy.myUiDsl.Bval;
import edu.aut.islab.ghaemi.minuy.myUiDsl.Gval;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MyUiDslPackage;
import edu.aut.islab.ghaemi.minuy.myUiDsl.RgbaColor;
import edu.aut.islab.ghaemi.minuy.myUiDsl.Rval;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rgba Color</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.RgbaColorImpl#getRval <em>Rval</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.RgbaColorImpl#getGval <em>Gval</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.RgbaColorImpl#getBval <em>Bval</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.RgbaColorImpl#getAval <em>Aval</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RgbaColorImpl extends colorDefImpl implements RgbaColor
{
  /**
   * The cached value of the '{@link #getRval() <em>Rval</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRval()
   * @generated
   * @ordered
   */
  protected Rval rval;

  /**
   * The cached value of the '{@link #getGval() <em>Gval</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGval()
   * @generated
   * @ordered
   */
  protected Gval gval;

  /**
   * The cached value of the '{@link #getBval() <em>Bval</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBval()
   * @generated
   * @ordered
   */
  protected Bval bval;

  /**
   * The cached value of the '{@link #getAval() <em>Aval</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAval()
   * @generated
   * @ordered
   */
  protected Aval aval;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RgbaColorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUiDslPackage.Literals.RGBA_COLOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rval getRval()
  {
    return rval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRval(Rval newRval, NotificationChain msgs)
  {
    Rval oldRval = rval;
    rval = newRval;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__RVAL, oldRval, newRval);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRval(Rval newRval)
  {
    if (newRval != rval)
    {
      NotificationChain msgs = null;
      if (rval != null)
        msgs = ((InternalEObject)rval).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__RVAL, null, msgs);
      if (newRval != null)
        msgs = ((InternalEObject)newRval).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__RVAL, null, msgs);
      msgs = basicSetRval(newRval, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__RVAL, newRval, newRval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Gval getGval()
  {
    return gval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGval(Gval newGval, NotificationChain msgs)
  {
    Gval oldGval = gval;
    gval = newGval;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__GVAL, oldGval, newGval);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGval(Gval newGval)
  {
    if (newGval != gval)
    {
      NotificationChain msgs = null;
      if (gval != null)
        msgs = ((InternalEObject)gval).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__GVAL, null, msgs);
      if (newGval != null)
        msgs = ((InternalEObject)newGval).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__GVAL, null, msgs);
      msgs = basicSetGval(newGval, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__GVAL, newGval, newGval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bval getBval()
  {
    return bval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBval(Bval newBval, NotificationChain msgs)
  {
    Bval oldBval = bval;
    bval = newBval;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__BVAL, oldBval, newBval);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBval(Bval newBval)
  {
    if (newBval != bval)
    {
      NotificationChain msgs = null;
      if (bval != null)
        msgs = ((InternalEObject)bval).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__BVAL, null, msgs);
      if (newBval != null)
        msgs = ((InternalEObject)newBval).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__BVAL, null, msgs);
      msgs = basicSetBval(newBval, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__BVAL, newBval, newBval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Aval getAval()
  {
    return aval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAval(Aval newAval, NotificationChain msgs)
  {
    Aval oldAval = aval;
    aval = newAval;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__AVAL, oldAval, newAval);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAval(Aval newAval)
  {
    if (newAval != aval)
    {
      NotificationChain msgs = null;
      if (aval != null)
        msgs = ((InternalEObject)aval).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__AVAL, null, msgs);
      if (newAval != null)
        msgs = ((InternalEObject)newAval).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.RGBA_COLOR__AVAL, null, msgs);
      msgs = basicSetAval(newAval, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.RGBA_COLOR__AVAL, newAval, newAval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyUiDslPackage.RGBA_COLOR__RVAL:
        return basicSetRval(null, msgs);
      case MyUiDslPackage.RGBA_COLOR__GVAL:
        return basicSetGval(null, msgs);
      case MyUiDslPackage.RGBA_COLOR__BVAL:
        return basicSetBval(null, msgs);
      case MyUiDslPackage.RGBA_COLOR__AVAL:
        return basicSetAval(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUiDslPackage.RGBA_COLOR__RVAL:
        return getRval();
      case MyUiDslPackage.RGBA_COLOR__GVAL:
        return getGval();
      case MyUiDslPackage.RGBA_COLOR__BVAL:
        return getBval();
      case MyUiDslPackage.RGBA_COLOR__AVAL:
        return getAval();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUiDslPackage.RGBA_COLOR__RVAL:
        setRval((Rval)newValue);
        return;
      case MyUiDslPackage.RGBA_COLOR__GVAL:
        setGval((Gval)newValue);
        return;
      case MyUiDslPackage.RGBA_COLOR__BVAL:
        setBval((Bval)newValue);
        return;
      case MyUiDslPackage.RGBA_COLOR__AVAL:
        setAval((Aval)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.RGBA_COLOR__RVAL:
        setRval((Rval)null);
        return;
      case MyUiDslPackage.RGBA_COLOR__GVAL:
        setGval((Gval)null);
        return;
      case MyUiDslPackage.RGBA_COLOR__BVAL:
        setBval((Bval)null);
        return;
      case MyUiDslPackage.RGBA_COLOR__AVAL:
        setAval((Aval)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.RGBA_COLOR__RVAL:
        return rval != null;
      case MyUiDslPackage.RGBA_COLOR__GVAL:
        return gval != null;
      case MyUiDslPackage.RGBA_COLOR__BVAL:
        return bval != null;
      case MyUiDslPackage.RGBA_COLOR__AVAL:
        return aval != null;
    }
    return super.eIsSet(featureID);
  }

} //RgbaColorImpl
