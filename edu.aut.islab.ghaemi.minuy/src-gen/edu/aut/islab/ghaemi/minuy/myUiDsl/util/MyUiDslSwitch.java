/**
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.myUiDsl.util;

import edu.aut.islab.ghaemi.minuy.myUiDsl.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see edu.aut.islab.ghaemi.minuy.myUiDsl.MyUiDslPackage
 * @generated
 */
public class MyUiDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyUiDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyUiDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyUiDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyUiDslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.HEAD:
      {
        Head head = (Head)theEObject;
        T result = caseHead(head);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.BODY:
      {
        Body body = (Body)theEObject;
        T result = caseBody(body);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.NODE:
      {
        Node node = (Node)theEObject;
        T result = caseNode(node);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.SELF_REPEAT:
      {
        SelfRepeat selfRepeat = (SelfRepeat)theEObject;
        T result = caseSelfRepeat(selfRepeat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.ACCESSORY:
      {
        Accessory accessory = (Accessory)theEObject;
        T result = caseAccessory(accessory);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.INNER_FEATURE:
      {
        InnerFeature innerFeature = (InnerFeature)theEObject;
        T result = caseInnerFeature(innerFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.INNER_TEXT:
      {
        InnerText innerText = (InnerText)theEObject;
        T result = caseInnerText(innerText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.INNER_STYLE:
      {
        InnerStyle innerStyle = (InnerStyle)theEObject;
        T result = caseInnerStyle(innerStyle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.INNER_CLASS:
      {
        InnerClass innerClass = (InnerClass)theEObject;
        T result = caseInnerClass(innerClass);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.CLASS_NAME:
      {
        ClassName className = (ClassName)theEObject;
        T result = caseClassName(className);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.CLASS_NAME_SEC:
      {
        ClassNameSec classNameSec = (ClassNameSec)theEObject;
        T result = caseClassNameSec(classNameSec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.INNER_TYPE:
      {
        InnerType innerType = (InnerType)theEObject;
        T result = caseInnerType(innerType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.CSS_STYLES:
      {
        CssStyles cssStyles = (CssStyles)theEObject;
        T result = caseCssStyles(cssStyles);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.CSS_STYLE:
      {
        CssStyle cssStyle = (CssStyle)theEObject;
        T result = caseCssStyle(cssStyle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.BORDER:
      {
        Border border = (Border)theEObject;
        T result = caseBorder(border);
        if (result == null) result = caseCssStyle(border);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.COLOR:
      {
        Color color = (Color)theEObject;
        T result = caseColor(color);
        if (result == null) result = caseCssStyle(color);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.BACK_COLOR:
      {
        BackColor backColor = (BackColor)theEObject;
        T result = caseBackColor(backColor);
        if (result == null) result = caseCssStyle(backColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.COLOR_DEF:
      {
        colorDef colorDef = (colorDef)theEObject;
        T result = casecolorDef(colorDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.LITERAL_COLOR:
      {
        LiteralColor literalColor = (LiteralColor)theEObject;
        T result = caseLiteralColor(literalColor);
        if (result == null) result = casecolorDef(literalColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.RGBA_COLOR:
      {
        RgbaColor rgbaColor = (RgbaColor)theEObject;
        T result = caseRgbaColor(rgbaColor);
        if (result == null) result = casecolorDef(rgbaColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.RVAL:
      {
        Rval rval = (Rval)theEObject;
        T result = caseRval(rval);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.GVAL:
      {
        Gval gval = (Gval)theEObject;
        T result = caseGval(gval);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.BVAL:
      {
        Bval bval = (Bval)theEObject;
        T result = caseBval(bval);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.AVAL:
      {
        Aval aval = (Aval)theEObject;
        T result = caseAval(aval);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.BORDER_RAD:
      {
        BorderRad borderRad = (BorderRad)theEObject;
        T result = caseBorderRad(borderRad);
        if (result == null) result = caseCssStyle(borderRad);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.POS:
      {
        Pos pos = (Pos)theEObject;
        T result = casePos(pos);
        if (result == null) result = caseCssStyle(pos);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.FLT:
      {
        Flt flt = (Flt)theEObject;
        T result = caseFlt(flt);
        if (result == null) result = caseCssStyle(flt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.CLR:
      {
        Clr clr = (Clr)theEObject;
        T result = caseClr(clr);
        if (result == null) result = caseCssStyle(clr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.DISP:
      {
        Disp disp = (Disp)theEObject;
        T result = caseDisp(disp);
        if (result == null) result = caseCssStyle(disp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.VER_AL:
      {
        VerAl verAl = (VerAl)theEObject;
        T result = caseVerAl(verAl);
        if (result == null) result = caseCssStyle(verAl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.OFLOW:
      {
        OFlow oFlow = (OFlow)theEObject;
        T result = caseOFlow(oFlow);
        if (result == null) result = caseCssStyle(oFlow);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.WID:
      {
        Wid wid = (Wid)theEObject;
        T result = caseWid(wid);
        if (result == null) result = caseCssStyle(wid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.H8:
      {
        H8 h8 = (H8)theEObject;
        T result = caseH8(h8);
        if (result == null) result = caseCssStyle(h8);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.COORD:
      {
        Coord coord = (Coord)theEObject;
        T result = caseCoord(coord);
        if (result == null) result = caseCssStyle(coord);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.MARG:
      {
        Marg marg = (Marg)theEObject;
        T result = caseMarg(marg);
        if (result == null) result = caseCssStyle(marg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.PADD:
      {
        Padd padd = (Padd)theEObject;
        T result = casePadd(padd);
        if (result == null) result = caseCssStyle(padd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.MIN_MAX_VALUE:
      {
        MinMaxValue minMaxValue = (MinMaxValue)theEObject;
        T result = caseMinMaxValue(minMaxValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.MIN_VAL:
      {
        MinVal minVal = (MinVal)theEObject;
        T result = caseMinVal(minVal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.MAX_VAL:
      {
        MaxVal maxVal = (MaxVal)theEObject;
        T result = caseMaxVal(maxVal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.MID_VAL:
      {
        MidVal midVal = (MidVal)theEObject;
        T result = caseMidVal(midVal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.FOUR_ASPECT:
      {
        FourAspect fourAspect = (FourAspect)theEObject;
        T result = caseFourAspect(fourAspect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.LEFT_ASPECT:
      {
        LeftAspect leftAspect = (LeftAspect)theEObject;
        T result = caseLeftAspect(leftAspect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.RIGHT_ASPECT:
      {
        RightAspect rightAspect = (RightAspect)theEObject;
        T result = caseRightAspect(rightAspect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.UP_ASPECT:
      {
        UpAspect upAspect = (UpAspect)theEObject;
        T result = caseUpAspect(upAspect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyUiDslPackage.DOWN_ASPECT:
      {
        DownAspect downAspect = (DownAspect)theEObject;
        T result = caseDownAspect(downAspect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Head</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Head</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHead(Head object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBody(Body object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Node</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Node</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNode(Node object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Self Repeat</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Self Repeat</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelfRepeat(SelfRepeat object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Accessory</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Accessory</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAccessory(Accessory object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerFeature(InnerFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerText(InnerText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Style</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Style</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerStyle(InnerStyle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Class</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Class</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerClass(InnerClass object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassName(ClassName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Name Sec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Name Sec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassNameSec(ClassNameSec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerType(InnerType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Css Styles</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Css Styles</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCssStyles(CssStyles object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Css Style</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Css Style</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCssStyle(CssStyle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Border</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Border</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBorder(Border object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColor(Color object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Back Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Back Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackColor(BackColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>color Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>color Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecolorDef(colorDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Literal Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Literal Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLiteralColor(LiteralColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rgba Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rgba Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRgbaColor(RgbaColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rval</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rval</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRval(Rval object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Gval</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Gval</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGval(Gval object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bval</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bval</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBval(Bval object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Aval</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Aval</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAval(Aval object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Border Rad</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Border Rad</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBorderRad(BorderRad object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pos</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pos</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePos(Pos object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Flt</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Flt</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFlt(Flt object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Clr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Clr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClr(Clr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDisp(Disp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ver Al</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ver Al</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerAl(VerAl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OFlow</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OFlow</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOFlow(OFlow object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Wid</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Wid</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWid(Wid object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>H8</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>H8</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseH8(H8 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Coord</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Coord</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCoord(Coord object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Marg</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Marg</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarg(Marg object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Padd</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Padd</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePadd(Padd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Max Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Max Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinMaxValue(MinMaxValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Val</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Val</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinVal(MinVal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Val</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Val</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaxVal(MaxVal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mid Val</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mid Val</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMidVal(MidVal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Four Aspect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Four Aspect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFourAspect(FourAspect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Left Aspect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Left Aspect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLeftAspect(LeftAspect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Right Aspect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Right Aspect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRightAspect(RightAspect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Up Aspect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Up Aspect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUpAspect(UpAspect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Down Aspect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Down Aspect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDownAspect(DownAspect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyUiDslSwitch
