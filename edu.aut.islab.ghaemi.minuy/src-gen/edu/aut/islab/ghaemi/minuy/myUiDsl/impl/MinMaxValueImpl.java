/**
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.myUiDsl.impl;

import edu.aut.islab.ghaemi.minuy.myUiDsl.MaxVal;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MidVal;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MinMaxValue;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MinVal;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MyUiDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Min Max Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.MinMaxValueImpl#getMinVal <em>Min Val</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.MinMaxValueImpl#getMaxVal <em>Max Val</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.MinMaxValueImpl#getMidVal <em>Mid Val</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MinMaxValueImpl extends MinimalEObjectImpl.Container implements MinMaxValue
{
  /**
   * The cached value of the '{@link #getMinVal() <em>Min Val</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinVal()
   * @generated
   * @ordered
   */
  protected MinVal minVal;

  /**
   * The cached value of the '{@link #getMaxVal() <em>Max Val</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxVal()
   * @generated
   * @ordered
   */
  protected MaxVal maxVal;

  /**
   * The cached value of the '{@link #getMidVal() <em>Mid Val</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMidVal()
   * @generated
   * @ordered
   */
  protected MidVal midVal;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MinMaxValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUiDslPackage.Literals.MIN_MAX_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MinVal getMinVal()
  {
    return minVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinVal(MinVal newMinVal, NotificationChain msgs)
  {
    MinVal oldMinVal = minVal;
    minVal = newMinVal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL, oldMinVal, newMinVal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinVal(MinVal newMinVal)
  {
    if (newMinVal != minVal)
    {
      NotificationChain msgs = null;
      if (minVal != null)
        msgs = ((InternalEObject)minVal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL, null, msgs);
      if (newMinVal != null)
        msgs = ((InternalEObject)newMinVal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL, null, msgs);
      msgs = basicSetMinVal(newMinVal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL, newMinVal, newMinVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MaxVal getMaxVal()
  {
    return maxVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaxVal(MaxVal newMaxVal, NotificationChain msgs)
  {
    MaxVal oldMaxVal = maxVal;
    maxVal = newMaxVal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL, oldMaxVal, newMaxVal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxVal(MaxVal newMaxVal)
  {
    if (newMaxVal != maxVal)
    {
      NotificationChain msgs = null;
      if (maxVal != null)
        msgs = ((InternalEObject)maxVal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL, null, msgs);
      if (newMaxVal != null)
        msgs = ((InternalEObject)newMaxVal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL, null, msgs);
      msgs = basicSetMaxVal(newMaxVal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL, newMaxVal, newMaxVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MidVal getMidVal()
  {
    return midVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMidVal(MidVal newMidVal, NotificationChain msgs)
  {
    MidVal oldMidVal = midVal;
    midVal = newMidVal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MID_VAL, oldMidVal, newMidVal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMidVal(MidVal newMidVal)
  {
    if (newMidVal != midVal)
    {
      NotificationChain msgs = null;
      if (midVal != null)
        msgs = ((InternalEObject)midVal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MID_VAL, null, msgs);
      if (newMidVal != null)
        msgs = ((InternalEObject)newMidVal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.MIN_MAX_VALUE__MID_VAL, null, msgs);
      msgs = basicSetMidVal(newMidVal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.MIN_MAX_VALUE__MID_VAL, newMidVal, newMidVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL:
        return basicSetMinVal(null, msgs);
      case MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL:
        return basicSetMaxVal(null, msgs);
      case MyUiDslPackage.MIN_MAX_VALUE__MID_VAL:
        return basicSetMidVal(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL:
        return getMinVal();
      case MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL:
        return getMaxVal();
      case MyUiDslPackage.MIN_MAX_VALUE__MID_VAL:
        return getMidVal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL:
        setMinVal((MinVal)newValue);
        return;
      case MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL:
        setMaxVal((MaxVal)newValue);
        return;
      case MyUiDslPackage.MIN_MAX_VALUE__MID_VAL:
        setMidVal((MidVal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL:
        setMinVal((MinVal)null);
        return;
      case MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL:
        setMaxVal((MaxVal)null);
        return;
      case MyUiDslPackage.MIN_MAX_VALUE__MID_VAL:
        setMidVal((MidVal)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.MIN_MAX_VALUE__MIN_VAL:
        return minVal != null;
      case MyUiDslPackage.MIN_MAX_VALUE__MAX_VAL:
        return maxVal != null;
      case MyUiDslPackage.MIN_MAX_VALUE__MID_VAL:
        return midVal != null;
    }
    return super.eIsSet(featureID);
  }

} //MinMaxValueImpl
