/**
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.myUiDsl.impl;

import edu.aut.islab.ghaemi.minuy.myUiDsl.ClassName;
import edu.aut.islab.ghaemi.minuy.myUiDsl.ClassNameSec;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MyUiDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Class Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.ClassNameImpl#getTheId <em>The Id</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.ClassNameImpl#getClazz <em>Clazz</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClassNameImpl extends MinimalEObjectImpl.Container implements ClassName
{
  /**
   * The default value of the '{@link #getTheId() <em>The Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTheId()
   * @generated
   * @ordered
   */
  protected static final String THE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTheId() <em>The Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTheId()
   * @generated
   * @ordered
   */
  protected String theId = THE_ID_EDEFAULT;

  /**
   * The cached value of the '{@link #getClazz() <em>Clazz</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClazz()
   * @generated
   * @ordered
   */
  protected EList<ClassNameSec> clazz;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClassNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUiDslPackage.Literals.CLASS_NAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTheId()
  {
    return theId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTheId(String newTheId)
  {
    String oldTheId = theId;
    theId = newTheId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.CLASS_NAME__THE_ID, oldTheId, theId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ClassNameSec> getClazz()
  {
    if (clazz == null)
    {
      clazz = new EObjectContainmentEList<ClassNameSec>(ClassNameSec.class, this, MyUiDslPackage.CLASS_NAME__CLAZZ);
    }
    return clazz;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyUiDslPackage.CLASS_NAME__CLAZZ:
        return ((InternalEList<?>)getClazz()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUiDslPackage.CLASS_NAME__THE_ID:
        return getTheId();
      case MyUiDslPackage.CLASS_NAME__CLAZZ:
        return getClazz();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUiDslPackage.CLASS_NAME__THE_ID:
        setTheId((String)newValue);
        return;
      case MyUiDslPackage.CLASS_NAME__CLAZZ:
        getClazz().clear();
        getClazz().addAll((Collection<? extends ClassNameSec>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.CLASS_NAME__THE_ID:
        setTheId(THE_ID_EDEFAULT);
        return;
      case MyUiDslPackage.CLASS_NAME__CLAZZ:
        getClazz().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.CLASS_NAME__THE_ID:
        return THE_ID_EDEFAULT == null ? theId != null : !THE_ID_EDEFAULT.equals(theId);
      case MyUiDslPackage.CLASS_NAME__CLAZZ:
        return clazz != null && !clazz.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (theId: ");
    result.append(theId);
    result.append(')');
    return result.toString();
  }

} //ClassNameImpl
