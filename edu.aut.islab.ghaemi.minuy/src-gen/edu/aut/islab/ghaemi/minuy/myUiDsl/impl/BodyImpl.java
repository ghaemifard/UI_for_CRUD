/**
 * generated by Xtext 2.10.0
 */
package edu.aut.islab.ghaemi.minuy.myUiDsl.impl;

import edu.aut.islab.ghaemi.minuy.myUiDsl.Body;
import edu.aut.islab.ghaemi.minuy.myUiDsl.MyUiDslPackage;
import edu.aut.islab.ghaemi.minuy.myUiDsl.Node;
import edu.aut.islab.ghaemi.minuy.myUiDsl.SelfRepeat;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.BodyImpl#getName <em>Name</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.BodyImpl#getRight <em>Right</em>}</li>
 *   <li>{@link edu.aut.islab.ghaemi.minuy.myUiDsl.impl.BodyImpl#getSelfRepeat <em>Self Repeat</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BodyImpl extends MinimalEObjectImpl.Container implements Body
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected Node name;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected EList<Node> right;

  /**
   * The cached value of the '{@link #getSelfRepeat() <em>Self Repeat</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelfRepeat()
   * @generated
   * @ordered
   */
  protected SelfRepeat selfRepeat;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUiDslPackage.Literals.BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Node getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetName(Node newName, NotificationChain msgs)
  {
    Node oldName = name;
    name = newName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.BODY__NAME, oldName, newName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(Node newName)
  {
    if (newName != name)
    {
      NotificationChain msgs = null;
      if (name != null)
        msgs = ((InternalEObject)name).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.BODY__NAME, null, msgs);
      if (newName != null)
        msgs = ((InternalEObject)newName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.BODY__NAME, null, msgs);
      msgs = basicSetName(newName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.BODY__NAME, newName, newName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Node> getRight()
  {
    if (right == null)
    {
      right = new EObjectContainmentEList<Node>(Node.class, this, MyUiDslPackage.BODY__RIGHT);
    }
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SelfRepeat getSelfRepeat()
  {
    return selfRepeat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSelfRepeat(SelfRepeat newSelfRepeat, NotificationChain msgs)
  {
    SelfRepeat oldSelfRepeat = selfRepeat;
    selfRepeat = newSelfRepeat;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUiDslPackage.BODY__SELF_REPEAT, oldSelfRepeat, newSelfRepeat);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSelfRepeat(SelfRepeat newSelfRepeat)
  {
    if (newSelfRepeat != selfRepeat)
    {
      NotificationChain msgs = null;
      if (selfRepeat != null)
        msgs = ((InternalEObject)selfRepeat).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.BODY__SELF_REPEAT, null, msgs);
      if (newSelfRepeat != null)
        msgs = ((InternalEObject)newSelfRepeat).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUiDslPackage.BODY__SELF_REPEAT, null, msgs);
      msgs = basicSetSelfRepeat(newSelfRepeat, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUiDslPackage.BODY__SELF_REPEAT, newSelfRepeat, newSelfRepeat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyUiDslPackage.BODY__NAME:
        return basicSetName(null, msgs);
      case MyUiDslPackage.BODY__RIGHT:
        return ((InternalEList<?>)getRight()).basicRemove(otherEnd, msgs);
      case MyUiDslPackage.BODY__SELF_REPEAT:
        return basicSetSelfRepeat(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUiDslPackage.BODY__NAME:
        return getName();
      case MyUiDslPackage.BODY__RIGHT:
        return getRight();
      case MyUiDslPackage.BODY__SELF_REPEAT:
        return getSelfRepeat();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUiDslPackage.BODY__NAME:
        setName((Node)newValue);
        return;
      case MyUiDslPackage.BODY__RIGHT:
        getRight().clear();
        getRight().addAll((Collection<? extends Node>)newValue);
        return;
      case MyUiDslPackage.BODY__SELF_REPEAT:
        setSelfRepeat((SelfRepeat)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.BODY__NAME:
        setName((Node)null);
        return;
      case MyUiDslPackage.BODY__RIGHT:
        getRight().clear();
        return;
      case MyUiDslPackage.BODY__SELF_REPEAT:
        setSelfRepeat((SelfRepeat)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUiDslPackage.BODY__NAME:
        return name != null;
      case MyUiDslPackage.BODY__RIGHT:
        return right != null && !right.isEmpty();
      case MyUiDslPackage.BODY__SELF_REPEAT:
        return selfRepeat != null;
    }
    return super.eIsSet(featureID);
  }

} //BodyImpl
